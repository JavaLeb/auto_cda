# ================================================================================================
# 数据源配置.
# ================================================================================================
data_source:
  type: 'file' #数据源类型
  format: 'txt' # 文件的格式（支持excel、txt、csv）
  field_sep: ',' # 字段（属性、特征）之间的分隔符.
  #  path: 'E:\pycharm_workspace\cda\d2l\data\house-prices-advanced-regression-techniques\train.csv'
  path: 'E:\pycharm_workspace\auto_cda\data\housing\housing.csv'
  #  path: 'E:\pycharm_workspace\auto_cda\data\sina_train.csv'
  #  path: ../data/工业蒸汽量预测/data/zhengqi_train.txt  # 文件路径.
  header: 0 # 标题行.

# ================================================================================================
# 数据探索配置.
# ================================================================================================
data_explorer:
  head_num: 10  # 打印数据的前多少行.
  class_fields: [ ] # 类别字段配置，如果配置了该字段，c_fields_ratio、unique_class_num配置失效.
  text_fields: [ ] # 文本字段，该配置字段和object类型字段判定为文本字段.
  class_fields_ratio: 0.02  # 判断类别字段的阈值，列的不同值占总行数的比例不大于该值被判定为类别字段.
  unique_class_num: 20  # 判断类别字段的阈值. 列的不同值不大于该值，才认为是类别字段.
  show_hist_plot: false
  show_relation_plot: false # 展示相关性矩阵热力图.


# ================================================================================================
# 数据切分器配置
# ================================================================================================
data_splitter:
  type: simple # 简单交叉验证（simple）、K折交叉验证（k_fold）、留一法交叉验证（LOO）、留P法交叉验证（LPO）.
  train_size: 0.7

  #  type: k_fold
  k: 5

# ================================================================================================
# 数据处理器配置
# ================================================================================================
data_processor:
  # ------------------------------------------------------------------
  # 字段选择器配置：
  #   对字段进行选择，例如：删除一些不需要的字段.
  # fields:
  #   配置需要删除的字段名称，多个字段使用英文逗号","分隔，例如[f1,f2,f3].
  # ------------------------------------------------------------------
  field_selection:
    fields: [ ]

  # ------------------------------------------------------------------
  # 字段清洗器配置：
  #   对字段进行清洗，例如：对字段缺失值进行填充.
  # fields:
  #   配置需要删除的字段名称，多个字段使用英文逗号","分隔，例如[f1,f2,f3].
  # ------------------------------------------------------------------
  field_cleaner:
    # 缺失值清洗.
    na_cleaner:
      - fields: [ total_bedrooms ] # 待清洗的字段名称列表.
        clean_method: fill  # 对缺失值处理. drop、drop_na、fill。drop: 删除列。drop_na: 删除缺失值的行，fill：填充缺失值.
        method: median  # 常数值（const）、均值（mean）、中位数（median）、众数（mode）
        value:  # 填充的值，当method=const时生效.

  # ------------------------------------------------------------------
  # 字段编码器配置：
  #   对字段进行编码，例如：对字段的所有值进行独特编码.
  # fields:
  #   配置需要进行编码的字段名称，多个字段使用英文逗号","分隔，例如[f1,f2,f3].
  # name:
  #   配置编码器名称，支持ordinal（有序编码）、one_hot（独热编码）、label（标签编码）.
  # ------------------------------------------------------------------
  field_encoder:
    - fields: [ ocean_proximity ]
      encoder:
        name: one_hot
    - fields: [ ]
      encoder:
        name:

  # ------------------------------------------------------------------
  # 字段转换器配置：
  #   对字段进行转换，例如：对字段的所有值进行标准化.
  # fields:
  #   配置需要进行转换的字段名称，多个字段使用英文逗号","分隔，例如[f1,f2,f3].
  # transformers:
  #   配置转换器，可配置转换器名称（MinMaxScaler，等价于sklearn.preprocessing.MinMaxScaler）
  #   或转换器全路径（sklearn.preprocessing.MinMaxScaler），也可配置自定义转换器，无论系统内置或自定义的转换器，均
  #   需实现fit()、transform()和fit_transform()方法. 转换器执行时按照配置的顺序执行.
  # ------------------------------------------------------------------
  field_transformer:
    - fields: [ longitude,latitude,housing_median_age,total_rooms,total_bedrooms,population,households,median_income ]
      transformers:
        - name: StandardScaler
        - name:
    - fields: [ ]
      transformers:
        - name:
        - name:

# ================================================================================================
# 数据模型配置.
# assess:
#     mean_squared_error
#     root_mean_squared_error
# ================================================================================================
data_modeler:
  target_fields: [ median_house_value ]
  models: [ sklearn.linear_model.LinearRegression,sklearn.tree.DecisionTreeRegressor ]
  assessments: [ mean_squared_error,root_mean_squared_error ]
